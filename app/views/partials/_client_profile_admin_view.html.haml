.container-fluid.panel.panel-default
	.panel-body.container-fluid
		.row
			.col-md-8
				%h1= @user.full_name
				%p= @user.email
				%p= @user.phone
				%p= @user.address
				%p= @user.skype
				%hr
				%h5= @user.phase
				%h5= "Questionnaire status: " + @user.status
				%p<
					%h5 Last Client Activity: 
					= @last_event_message


			.col-md-4
				.panel.panel-review.panel-info
					%b Change Questionnaire Status
					%br
					.form-profile-button
						= button_to 'Approve', mark_client_status_path(:status => "Approved", :form_id => @form_id), {:method => 'post', :class => 'btn btn-sm btn-success'}
					.form-profile-button
						= button_to 'Reject', mark_client_status_path(:status => "Rejected", :form_id => @form_id), {:method => 'post', :class => 'btn btn-sm btn-danger'}
					.form-profile-button
						= button_to 'Incomplete', mark_client_status_path(:status => "Incomplete", :form_id => @form_id), {:method => 'post', :class => 'btn btn-sm btn-warning'}
					%br
					%b Change Client Phase
					%br
					.phase-change-select
						= form_for :edit_client, :url => admin_change_client_phase_path(:action => 'post') do |f|
							.row.form-group
								= f.select :changed_phase, options_for_select(User.Application_phases_array, @user.phase), id: 'changed_phase', class: 'form-control inline-block select'
								= f.submit 'Change Phase', class: 'btn btn-sm btn-default inline-block'
	.panel-body
		%ul.nav.nav-tabs
			%li.active
				%a{"data-toggle" => "tab", :href => "#home"} Status Feed
			%li
				%a{"data-toggle" => "tab", :href => "#menu1"} Caseworkers
			%li
				%a{"data-toggle" => "tab", :href => "#menu2"} Documents
			%li
				%a{"data-toggle" => "tab", :href => "#menu3"} Questionnaire
			%li
				%a{"data-toggle" => "tab", :href => "#menu4"} Notes
		.tab-content
			#home.tab-pane.fade.in.active
				%h3 Client Activity Feed
				%p Shows a feed of latest events related to the client.
				= render "partials/status_feed.html.erb"
			#menu1.tab-pane.fade
				%h3.text-center Caseworkers
				.caseworkers.text-center
					- @caseworker_names.each do |caseworker|
						.container-fluid
							.row
								.panel.panel-info.panel-user.col-centered.inline-block
									%h6.text-center= caseworker
								.remove-button.inline-block.select.btn.btn-sm.btn-default
									= form_for :remove_client, :url => admin_delete_caseworker_path(:action => 'post', :caseworker => caseworker),  :html => {:id => "remove_caseworker"} do |f|
										= button_tag( :class => ".glyphicon.glyphicon-remove") do
											.glyphicon.glyphicon-remove
				.assign-caseworker-select.container-fluid
					= form_for :edit_client, :url => admin_assign_caseworker_path(:action => 'post') do |f|
						.row.form-group.panel-default
							.col-md-9
								= f.select :assign_caseworker, options_for_select(Admin.Caseworkers), id: 'assign_caseworker', class: 'form-control'
							.col-md-3
								= f.submit 'Assign Caseworker', class: 'btn btn-sm btn-default'
			#menu2.tab-pane.fade
				%h3 All Documents
				= render "partials/updocs.html.erb"

			#menu3.tab-pane.fade
				.panel-body
					- @form_hash.each do |key, value|
						.form-info
							%div.form-question
								= key + ":"
							%div.form-response
								- if value.instance_of?(Array)
									= value.join(', ')
								- else
									= value				
			= javascript_include_tag "load_separately/notes_accordion"
			#menu4.tab-pane.fade
				%h3 Notes
				%input{:type => "text", :placeholder => "Title for new note", :id => "add_note_title"}
				%button{:id => "add_note"}
					Add note
				.notes
					-@notes.each do |n|
						%h4{:id => "note_title_" + n.id.to_s}
							= n.title
						%div{:id => "note_collapse_" + n.id.to_s}
							%br
							= link_to "Delete note", "", {:id => "delete_note_" + n.id.to_s}
							%br
							%textarea{:id => "note_text_" + n.id.to_s, :class => "note-field"}= n.text
							%br
							%button{:id => "note_update_" + n.id.to_s}
								Save
								// =button_to "Save", update_path(n.id), method: :put
								
- if current_admin.role == "central"
	.container-fluid.panel-default
		.panel.panel-danger
			.panel-heading
				%h5 Delete User Account
			.panel-body
				%h6 Are you sure you want to delete this account? This action cannot be undone.
				= button_to "Delete User", client_destroy_path(:id => @user.id), :method => :get, data: {confirm: "Are you sure you want to delete your profile? This action cannot be undone."},  class: "hvr-underline-from-left btn btn-lg btn-default"



